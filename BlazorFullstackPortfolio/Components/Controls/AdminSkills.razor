@rendermode InteractiveServer
@inject ProjectService ProjectService
@inject SkillService SkillService
@inject IJSRuntime JS



<h2>Admin Skills Dashboard</h2>

<!-- Button för att lägga till en ny skill -->
<div class="d-flex justify-content-center my-4">
    <button class="btn btn-outline-success btn-lg" @onclick="ShowAddSkillModal">
        + Lägg till ny färdighet
    </button>
</div>

<section id="skills" class="container text-center py-5">
    <Skills SkillsList="Skills" OnDelete="DeleteSkill" />
</section>

<!-- Modal för att lägga till en ny skill -->
<div class="modal fade" id="addSkillModal" tabindex="-1" aria-labelledby="addSkillModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSkillModalLabel">Lägg till ny färdighet</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseAddSkillModal"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="NewSkill" OnValidSubmit="AddSkill">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label>Teknologinamn</label>
                        <InputText @bind-Value="NewSkill.TechnologyName" class="form-control" />
                        <ValidationMessage For="@(() => NewSkill.TechnologyName)" />
                    </div>

                    <div class="mb-3">
                        <label>Erfarenhet</label>
                        <InputText @bind-Value="NewSkill.YearsOfExperience" class="form-control" />
                        <ValidationMessage For="@(() => NewSkill.YearsOfExperience)" />
                    </div>

                    <div class="mb-3">
                        <label>Nivå (1-100)</label>
                        <InputNumber @bind-Value="NewSkill.SkillLevel" class="form-control" />
                        <ValidationMessage For="@(() => NewSkill.SkillLevel)" />
                    </div>

                    <button type="submit" class="btn btn-primary">Lägg till</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    private List<Skill> Skills = new();
    private Skill NewSkill = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadSkills();
    }

    private async Task LoadSkills()
    {
        Skills = await SkillService.GetSkillsAsync();
    }

    private async Task AddSkill()
    {
        var success = await SkillService.AddSkillAsync(NewSkill);
        if (success)
        {
            await LoadSkills();
            NewSkill = new();
            await CloseAddSkillModal();
        }
    }

    private async Task DeleteSkill(int id)
    {
        var success = await SkillService.DeleteSkillAsync(id);
        if (success)
        {
            await LoadSkills();
        }
    }



    private async Task ShowAddSkillModal()
    {
        await JS.InvokeVoidAsync("bootstrapModal.show", "#addSkillModal");
    }

    private async Task CloseAddSkillModal()
    {
        await JS.InvokeVoidAsync("bootstrapModal.hide", "#addSkillModal");
    }
}
